// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using labpsi.gerenciadora.frota.infra.data.Context;

namespace labpsi.gerenciadora.frota.infra.data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200611184848_UpdateKm")]
    partial class UpdateKm
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("labpsi.gerenciadora.frota.domain.Aggregates.VeiculoAggregate.Km", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValue(new Guid("953c6d83-bcb4-4a81-a126-ebfb04119b73"));

                    b.Property<DateTime>("DataChegada")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateSaida")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("KmAtual")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Km");
                });

            modelBuilder.Entity("labpsi.gerenciadora.frota.domain.Aggregates.VeiculoAggregate.Veiculo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValue(new Guid("f9fe6fca-81cd-4a8c-be8b-78c6d9df0316"));

                    b.Property<int>("Ano")
                        .HasColumnName("Ano")
                        .HasColumnType("integer");

                    b.Property<string>("Chassi")
                        .IsRequired()
                        .HasColumnName("Chassi")
                        .HasColumnType("text");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnName("Cor")
                        .HasColumnType("text");

                    b.Property<decimal>("KmAtual")
                        .HasColumnName("KmAtual")
                        .HasColumnType("numeric");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnName("Marca")
                        .HasColumnType("text");

                    b.Property<int>("MesIpva")
                        .HasColumnName("MesIpva")
                        .HasColumnType("integer");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnName("Modelo")
                        .HasColumnType("text");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnName("Placa")
                        .HasColumnType("text");

                    b.Property<string>("Renavam")
                        .IsRequired()
                        .HasColumnName("Renavam")
                        .HasColumnType("text");

                    b.Property<decimal>("ValorPago")
                        .HasColumnName("ValorPago")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("_kmId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("_kmId");

                    b.ToTable("Veiculo");
                });

            modelBuilder.Entity("labpsi.gerenciadora.frota.domain.Aggregates.VeiculoAggregate.Veiculo", b =>
                {
                    b.HasOne("labpsi.gerenciadora.frota.domain.Aggregates.VeiculoAggregate.Km", "_km")
                        .WithMany()
                        .HasForeignKey("_kmId");
                });
#pragma warning restore 612, 618
        }
    }
}
